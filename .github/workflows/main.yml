name: build and publish v8 libs
on:
  release:
    types:
      - published

env:
  V8_VERSION: "13.8"

defaults:
  run:
    shell: bash

jobs:

  build-linux-x64:
#    if: ${{ false }}  # disable
    name: linux
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: compile v8
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
          cd ${{ github.workspace }}/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          ./build/install-build-deps.sh
          mkdir -p out.gn/linux.${{ matrix.platform }}.release/
          cp ${{ github.workspace }}/args.linux.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/linux.${{ matrix.platform }}.release/args.gn
          gn gen out.gn/linux.${{ matrix.platform }}.release
          ninja v8_monolith -C out.gn/linux.${{ matrix.platform }}.release/
          gn args --list out.gn/linux.${{ matrix.platform }}.release
          tar -zcvf ../include.tar.gz include
          tar -zcvf ../src.tar.gz src
          gzip -9 -c out.gn/linux.${{ matrix.platform }}.release/obj/libv8_monolith.a > ../libv8_monolith-linux-${{ matrix.platform }}.a.gz
          tar -zcvf ../gen-linux-${{ matrix.platform }}.tar.gz out.gn/linux.${{ matrix.platform }}.release/gen
      - name: Upload headers
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/include.tar.gz
          asset_name: include.tar.gz
          asset_content_type: application/gzip
      - name: Upload source
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/src.tar.gz
          asset_name: src.tar.gz
          asset_content_type: application/gzip
      - name: Upload static library
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/libv8_monolith-linux-${{ matrix.platform }}.a.gz
          asset_name: libv8_monolith-linux-${{ matrix.platform }}.a.gz
          asset_content_type: application/gzip
      - name: Upload generated source
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/gen-linux-${{ matrix.platform }}.tar.gz
          asset_name: gen-linux-${{ matrix.platform }}.tar.gz
          asset_content_type: application/gzip

  build-mac-x64:
#    if: ${{ false }}  # disable
    name: mac
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        platform: [x64,arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: build v8
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
          cd ${{ github.workspace }}/v8
          git checkout branch-heads/$V8_VERSION
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
          cp ${{ github.workspace }}/args.mac.${{ matrix.platform }}.gn ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/args.gn
          gn gen out.gn/${{ matrix.platform }}.release
          cp ../macos_atomics_unimplemented.patch ./
          git apply -v macos_atomics_unimplemented.patch
          ninja v8_monolith -C out.gn/${{ matrix.platform }}.release/
          gn args --list out.gn/${{ matrix.platform }}.release
          gzip -9 -c out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > ../libv8_monolith-mac-${{ matrix.platform }}.a.gz
          tar -zcvf ../gen-mac-${{ matrix.platform }}.tar.gz out.gn/${{ matrix.platform }}.release/gen
      - name: Upload static library
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/libv8_monolith-mac-${{ matrix.platform }}.a.gz
          asset_name: libv8_monolith-mac-${{ matrix.platform }}.a.gz
          asset_content_type: application/gzip
      - name: Upload generated source
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/gen-mac-${{ matrix.platform }}.tar.gz
          asset_name: gen-mac-${{ matrix.platform }}.tar.gz
          asset_content_type: application/gzip
