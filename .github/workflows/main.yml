name: Build V8
on: 
  push:
    tags:
      - '[0-9].[0-9]'

defaults:
  run:
    shell: bash

jobs:

  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v8 Version ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md

  build-mac:
#    if: ${{ false }}  # disable for now
    name: mac
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        platform: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          echo checking out ${{  github.ref }}
          git checkout branch-heads/${{  github.ref }}
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.mac.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja v8_monolith -C out.gn/${{ matrix.platform }}.release/
      - name: Upload static library
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a
          name: libv8_monolith-mac-${{ matrix.platform }}.a
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a
          asset_name: libv8_monolith-mac-${{ matrix.platform }}.a
      - name: Upload headers
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/v8/include
          name: include
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/v8/include
          asset_name: include

  build-linux:
#    if: ${{ false }}  # disable for now
    name: linux
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          echo checking out ${{  github.ref }}
          git checkout branch-heads/${{  github.ref }}
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.linux.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          build/linux/sysroot_scripts/install-sysroot.py --arch=${{ matrix.platform }}
          gn gen out.gn/${{ matrix.platform }}.release
          ninja v8_monolith -C out.gn/${{ matrix.platform }}.release/
      - name: Upload static library
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a
          name: libv8_monolith-linux-${{ matrix.platform }}.a
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a
          asset_name: libv8_monolith-linux-${{ matrix.platform }}.a

  build-linux-arm:
    name: linux-arm
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          echo checking out ${{  github.ref }}
          git checkout branch-heads/${{  github.ref }}
          gclient sync
          mkdir -p out.gn/arm64.release/
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.linux.arm64.gn $GITHUB_WORKSPACE/v8/out.gn/arm64.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
          gn gen out.gn/arm64.release
          ninja v8_monolith -C out.gn/arm64.release/
      - name: Upload static library
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/v8/out.gn/arm64.release/obj/libv8_monolith.a
          name: libv8_monolith-linux-arm64.a
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/v8/out.gn/arm64.release/obj/libv8_monolith.a
          asset_name: libv8_monolith-linux-arm64.a
