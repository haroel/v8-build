name: build and publish v8 libs
on:
  release:
    types:
      - published

defaults:
  run:
    shell: bash

jobs:

  build-mac:
    name: mac
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: foo
        run: |
          gzip -9 -c bump.sh > bump.sh.tar.gz
          ls -lah *.tar.gz
      - name: setup v8 build tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          gclient
          fetch v8
      - name: fetch beta branch
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cd $GITHUB_WORKSPACE/v8
          echo checking out ${{  github.ref_name }}
          git checkout branch-heads/${{  github.ref_name }}
          gclient sync
          mkdir -p out.gn/${{ matrix.platform }}.release/
      - name: Compress headers
        run: |
          tar -zcvf include.tar.gz v8/include
      - name: Upload headers
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/include.tar.gz
          asset_name: include.tar.gz
          asset_content_type: application/gzip
      - name: build v8 static library
        run: |
          export PATH="$GITHUB_WORKSPACE/depot_tools:${PATH}"
          cp args.mac.${{ matrix.platform }}.gn $GITHUB_WORKSPACE/v8/out.gn/${{ matrix.platform }}.release/args.gn
          cd $GITHUB_WORKSPACE/v8
          gn gen out.gn/${{ matrix.platform }}.release
          ninja v8_monolith -C out.gn/${{ matrix.platform }}.release/
      - name: Compress static library
        run: |
          gzip -9 -c ${{ github.workspace }}/v8/out.gn/${{ matrix.platform }}.release/obj/libv8_monolith.a > libv8_monolith-mac-${{ matrix.platform }}.a.tar.gz
      - name: Upload static library
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: libv8_monolith-mac-${{ matrix.platform }}.a.tar.gz
          asset_name: libv8_monolith-mac-${{ matrix.platform }}.a.tar.gz
          asset_content_type: application/gzip
